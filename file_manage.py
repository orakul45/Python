"""
1. Создать новый проект ""Консольный файловый менеджер"
2. В проекте реализовать следующий функционал:
После запуска программы пользователь видит меню, состоящее из следующих пунктов:
- создать папку;
- удалить (файл/папку);
- копировать (файл/папку);
- просмотр содержимого рабочей директории;
- посмотреть только папки;
- посмотреть только файлы;
- просмотр информации об операционной системе;
- создатель программы;
- играть в викторину;
- мой банковский счет;
- смена рабочей директории (*необязательный пункт);
- выход.
Так же можно добавить любой дополнительный функционал по желанию.
Описание пунктов:
- создать папку
после выбора пользователь вводит название папки, создаем её в рабочей директории;
- удалить (файл/папку)
после выбора пользователь вводит название папки или файла, удаляем из рабочей директории если такой есть;
- копировать (файл/папку)
после выбора пользователь вводит название папки/файла и новое название папки/файла. Копируем;
- просмотр содержимого рабочей директории
вывод всех объектов в рабочей папке;
- посмотреть только папки
вывод только папок которые находятся в рабочей папке;
- посмотреть только файлы
вывод только файлов которые находятся в рабочей папке;
- просмотр информации об операционной системе
вывести информацию об операционной системе (можно использовать пример из 1-го урока);
- создатель программы
вывод информации о создателе программы;
- играть в викторину
запуск игры викторина из предыдущего дз;
- мой банковский счет
запуск программы для работы с банковским счетом из предыдущего дз (задание учебное, после выхода из программы управлением счетом в главной программе сумму и историю покупок можно не запоминать);
- смена рабочей директории (*необязательный пункт)
усложненное задание пользователь вводит полный /home/user/... или относительный user/my/... путь. Меняем рабочую директорию на ту что ввели и работаем уже в ней;
- выход
выход из программы.
Так же можно добавить любой другой интересный или полезный функционал по своему желанию
После выполнения какого либо из пунктов снова возвращаемся в меню, пока пользователь не выберет выход
3. Выложите проект на github:
4. Можно сдать задание в виде pull request:
5. Посмотреть разбор дз по функциям, если требуется, то сделать работу надо ошибками.
"""

import os
import pathlib
import platform
import shutil

from bank import bank
from victory import victory

while True:
    print(' 1. создать папку')
    print(' 2. удалить (файл/папку)')
    print(' 3. копировать (файл/папку)')
    print(' 4. просмотр содержимого рабочей директории')
    print(' 5. посмотреть только папки;')
    print(' 6. посмотреть только файлы')
    print(' 7. просмотр информации об операционной системе')
    print(' 8. создатель программы')
    print(' 9. играть в викторину')
    print('10. мой банковский счет')
    print('11. смена рабочей директории (*необязательный пункт)')
    print('12. выход')

    choice = input('Выберите пункт меню: ')
    if choice == '1':
        # после выбора пользователь вводит название папки, создаем её в рабочей директории;
        i_dir = input('Введите название папки: ')
        os.mkdir(i_dir)
        pass
    elif choice == '2':
        # удалить (файл/папку)
        # после выбора пользователь вводит название папки или файла, удаляем из рабочей директории если такой есть;
        del_dir = input('Введите название папки или файла: ')
        path = pathlib.Path(del_dir)
        if path.exists():
            if path.is_file():
                path.unlink()
            else:
                shutil.rmtree(del_dir)
        else:
            print('Указанный файл ' + del_dir + ' не найден')
        pass
    elif choice == '3':
        # - копировать (файл/папку)
        # после выбора пользователь вводит название папки/файла и новое название папки/файла. Копируем;
        from_path = input('Введите название папки или файла для копирования: ')
        to_path = input('Введите новое название папки или файла: ')
        if os.path.isdir(from_path):
            shutil.copytree(from_path, to_path)
        if os.path.isfile(from_path):
            shutil.copy(from_path, to_path)
        pass
    elif choice == '4':
        # просмотр содержимого рабочей директории
        # вывод всех объектов в рабочей папке;
        print('Содержимое рабочей папки ' + os.path.abspath(os.curdir))
        for filename in os.listdir():
            print(filename)
        print()
        pass
    elif choice == '5':
        # посмотреть только папки
        # вывод только папок которые находятся в рабочей папке;
        for filename in os.listdir():
            if os.path.isdir(filename):
                print(filename)
        pass
    elif choice == '6':
        # - посмотреть только файлы
        # вывод только файлов которые находятся в рабочей папке;
        for filename in os.listdir():
            if os.path.isfile(filename):
                print(filename)
        pass
    elif choice == '7':
        # - просмотр информации об операционной системе
        # вывести информацию об операционной системе (можно использовать пример из 1-го урока);
        print(platform.system())
        print(platform.release())
        print(platform.architecture())
        print(platform.processor())
        pass
    elif choice == '8':
        # - создатель программы
        # вывод информации о создателе программы;
        print('Евгений')
        pass
    elif choice == '9':
        # - играть в викторину
        # запуск игры викторина из предыдущего дз;
        victory()
        pass
    elif choice == '10':
        # просмотр содержимого рабочей директории
        # Банковский счет
        bank()
        pass
    elif choice == '11':
        # просмотр содержимого рабочей директории
        from_path = input('Введите название папки или файла для копирования: ')
        to_path = input('Введите новое название папки или файла: ')
        pass

    elif choice == '12':
        break
    else:
        print('Неверный пункт меню')
